/* ###################################################################
**     This component module is generated by Processor Expert. Do not modify it.
**     Filename    : flexibleIO1.h
**     Project     : flexio_qc01
**     Processor   : MK82FN256VLL15
**     Component   : fsl_flexio
**     Version     : Component 1.3.0, Driver 01.00, CPU db: 3.00.000
**     Repository  : KSDK 1.3.0 MK82FN256xxx15
**     Compiler    : GNU C Compiler
**     Date/Time   : 2016-04-19, 20:42, # CodeGen: 15
**     Contents    :
**         FLEXIO_DRV_Init                          - flexio_status_t FLEXIO_DRV_Init(uint32_t instance,const flexio_user_config_t...
**         FLEXIO_DRV_Start                         - void FLEXIO_DRV_Start(uint32_t instance);
**         FLEXIO_DRV_Pause                         - void FLEXIO_DRV_Pause(uint32_t instance);
**         FLEXIO_DRV_RegisterCallback              - void FLEXIO_DRV_RegisterCallback(uint32_t instance,uint32_t...
**         FLEXIO_DRV_Deinit                        - flexio_status_t FLEXIO_DRV_Deinit(uint32_t instance);
**         FLEXIO_DRV_IRQHandler                    - void FLEXIO_DRV_IRQHandler(uint32_t instance);
**         FLEXIO_UART_DRV_Init                     - flexio_uart_status_t FLEXIO_UART_DRV_Init(uint32_t...
**         FLEXIO_UART_DRV_Deinit                   - void FLEXIO_UART_DRV_Deinit(flexio_uart_state_t * uartState);
**         FLEXIO_UART_DRV_InstallRxCallback        - flexio_uart_rx_callback_t FLEXIO_UART_D...
**         FLEXIO_UART_DRV_SendDataBlocking         - flexio_uart_status_t FLEXIO_UART_DRV_SendDataBlocking(flexio_uart_state_t *...
**         FLEXIO_UART_DRV_SendData                 - flexio_uart_status_t FLEXIO_UART_DRV_SendData(flexio_uart_state_t *...
**         FLEXIO_UART_DRV_GetTransmitStatus        - flexio_uart_status_t FLEXIO_UART_DRV_GetTransmitStatus(flexio_uart_state_t *...
**         FLEXIO_UART_DRV_AbortSendingData         - flexio_uart_status_t FLEXIO_UART_DRV_AbortSendingData(flexio_uart_state_t *...
**         FLEXIO_UART_DRV_ReceiveDataBlocking      - flexio_uart_status_t FLEXIO_UART_DRV_ReceiveDataBlocking(flexio_uart_state_t...
**         FLEXIO_UART_DRV_ReceiveData              - flexio_uart_status_t FLEXIO_UART_DRV_ReceiveData(flexio_uart_state_t *...
**         FLEXIO_UART_DRV_GetReceiveStatus         - flexio_uart_status_t FLEXIO_UART_DRV_GetReceiveStatus(flexio_uart_state_t *...
**         FLEXIO_UART_DRV_AbortReceivingData       - flexio_uart_status_t FLEXIO_UART_DRV_AbortReceivingData(flexio_uart_state_t *...
**         FLEXIO_UART_DRV_TX_IRQHandler            - void FLEXIO_UART_DRV_TX_IRQHandler(void * param);
**         FLEXIO_UART_DRV_RX_IRQHandler            - void FLEXIO_UART_DRV_RX_IRQHandler(void * param);
**         FLEXIO_SPI_DRV_Init                      - flexio_spi_status_t FLEXIO_SPI_DRV_Init(uint32_t instance,flexio_spi_state_t...
**         FLEXIO_SPI_DRV_Deinit                    - void FLEXIO_SPI_DRV_Deinit(flexio_spi_state_t * spiState);
**         FLEXIO_SPI_DRV_SendDataBlocking          - flexio_spi_status_t FLEXIO_SPI_DRV_SendDataBlocking(flexio_spi_state_t *...
**         FLEXIO_SPI_DRV_SendData                  - flexio_spi_status_t FLEXIO_SPI_DRV_SendData(flexio_spi_state_t *...
**         FLEXIO_SPI_DRV_GetTransmitStatus         - flexio_spi_status_t FLEXIO_SPI_DRV_GetTransmitStatus(flexio_spi_state_t *...
**         FLEXIO_SPI_DRV_AbortSendingData          - flexio_spi_status_t FLEXIO_SPI_DRV_AbortSendingData(flexio_spi_state_t *...
**         FLEXIO_SPI_DRV_ReceiveDataBlocking       - flexio_spi_status_t FLEXIO_SPI_DRV_ReceiveDataBlocking(flexio_spi_state_t *...
**         FLEXIO_SPI_DRV_ReceiveData               - flexio_spi_status_t FLEXIO_SPI_DRV_ReceiveData(flexio_spi_state_t *...
**         FLEXIO_SPI_DRV_GetReceiveStatus          - flexio_spi_status_t FLEXIO_SPI_DRV_GetReceiveStatus(flexio_spi_state_t *...
**         FLEXIO_SPI_DRV_AbortReceivingData        - flexio_spi_status_t FLEXIO_SPI_DRV_AbortReceivingData(flexio_spi_state_t *...
**         FLEXIO_SPI_DRV_TransferDataBlocking      - flexio_spi_status_t FLEXIO_SPI_DRV_TransferDataBlocking(flexio_spi_state_t *...
**         FLEXIO_SPI_DRV_TransferData              - flexio_spi_status_t FLEXIO_SPI_DRV_TransferData(flexio_spi_state_t *...
**         FLEXIO_SPI_DRV_TX_IRQHandler             - void FLEXIO_SPI_DRV_TX_IRQHandler(void * param);
**         FLEXIO_SPI_DRV_RX_IRQHandler             - void FLEXIO_SPI_DRV_RX_IRQHandler(void * param);
**         FLEXIO_SPI_DRV_EdmaSendDataBlocking      - flexio_spi_status_t FLEXIO_SPI_DRV_EdmaSendDataBlocking(flexio_spi_state_t *...
**         FLEXIO_SPI_DRV_EdmaSendData              - flexio_spi_status_t FLEXIO_SPI_DRV_EdmaSendData(flexio_spi_state_t *...
**         FLEXIO_SPI_DRV_EdmaGetTransmitStatus     - flexio_spi_status_t FLEXIO_SPI_DRV_EdmaGetTransmitStatus(flexio_spi_state_t *...
**         FLEXIO_SPI_DRV_EdmaAbortSendingData      - flexio_spi_status_t FLEXIO_SPI_DRV_EdmaAbortSendingData(flexio_spi_state_t *...
**         FLEXIO_SPI_DRV_EdmaReceiveDataBlocking   - flexio_spi_status_t FLEXIO_SPI_DRV_EdmaReceiveDataBlocking(flexio_spi_state_t...
**         FLEXIO_SPI_DRV_EdmaReceiveData           - flexio_spi_status_t FLEXIO_SPI_DRV_EdmaReceiveData(flexio_spi_state_t *...
**         FLEXIO_SPI_DRV_EdmaGetReceiveStatus      - flexio_spi_status_t FLEXIO_SPI_DRV_EdmaGetReceiveStatus(flexio_spi_state_t *...
**         FLEXIO_SPI_DRV_EdmaAbortReceivingData    - flexio_spi_status_t FLEXIO_SPI_DRV_EdmaAbortReceivingData(flexio_spi_state_t...
**         FLEXIO_SPI_DRV_EdmaTransferDataBlocking  - flexio_spi_status_t FLEXIO_SPI_DRV_Edma...
**         FLEXIO_SPI_DRV_EdmaTransferData          - flexio_spi_status_t FLEXIO_SPI_DRV_EdmaTransferData(flexio_spi_state_t *...
**         FLEXIO_SPI_DRV_DmaSendDataBlocking       - flexio_spi_status_t FLEXIO_SPI_DRV_DmaSendDataBlocking(flexio_spi_state_t *...
**         FLEXIO_SPI_DRV_DmaSendData               - flexio_spi_status_t FLEXIO_SPI_DRV_DmaSendData(flexio_spi_state_t *...
**         FLEXIO_SPI_DRV_DmaGetTransmitStatus      - flexio_spi_status_t FLEXIO_SPI_DRV_DmaGetTransmitStatus(flexio_spi_state_t *...
**         FLEXIO_SPI_DRV_DmaAbortSendingData       - flexio_spi_status_t FLEXIO_SPI_DRV_DmaAbortSendingData(flexio_spi_state_t *...
**         FLEXIO_SPI_DRV_DmaReceiveDataBlocking    - flexio_spi_status_t FLEXIO_SPI_DRV_DmaReceiveDataBlocking(flexio_spi_state_t...
**         FLEXIO_SPI_DRV_DmaReceiveData            - flexio_spi_status_t FLEXIO_SPI_DRV_DmaReceiveData(flexio_spi_state_t *...
**         FLEXIO_SPI_DRV_DmaGetReceiveStatus       - flexio_spi_status_t FLEXIO_SPI_DRV_DmaGetReceiveStatus(flexio_spi_state_t *...
**         FLEXIO_SPI_DRV_AbortDmaReceivingData     - flexio_spi_status_t FLEXIO_SPI_DRV_AbortDmaReceivingData(flexio_spi_state_t *...
**         FLEXIO_SPI_DRV_DmaTransferDataBlocking   - flexio_spi_status_t FLEXIO_SPI_DRV_DmaTransferDataBlocking(flexio_spi_state_t...
**         FLEXIO_SPI_DRV_DmaTransferData           - flexio_spi_status_t FLEXIO_SPI_DRV_DmaTransferData(flexio_spi_state_t *...
**         FLEXIO_I2C_DRV_MasterInit                - flexio_i2c_status_t FLEXIO_I2C_DRV_MasterInit(uint32_t...
**         FLEXIO_I2C_DRV_MasterDeinit              - void FLEXIO_I2C_DRV_MasterDeinit(flexio_i2c_state_t * i2cState);
**         FLEXIO_I2C_DRV_MasterSendDataBlocking    - flexio_i2c_status_t FLEXIO_I2C_DRV_MasterSendDataBlocking(flexio_i2c_state_t...
**         FLEXIO_I2C_DRV_MasterSendData            - flexio_i2c_status_t FLEXIO_I2C_DRV_MasterSendData(flexio_i2c_state_t *...
**         FLEXIO_I2C_DRV_MasterSendAddress         - flexio_i2c_status_t FLEXIO_I2C_DRV_MasterSendAddress(flexio_i2c_state_t *...
**         FLEXIO_I2C_DRV_MasterGetTransmitStatus   - flexio_i2c_status_t FLEXIO_I2C_DRV_MasterGetTransmitStatus(flexio_i2c_state_t...
**         FLEXIO_I2C_DRV_MasterAbortSendingData    - flexio_i2c_status_t FLEXIO_I2C_DRV_MasterAbortSendingData(flexio_i2c_state_t...
**         FLEXIO_I2C_DRV_MasterReceiveDataBlocking - flexio_i2c_status_t FLEXIO_I2C_DRV_Mast...
**         FLEXIO_I2C_DRV_MasterReceiveData         - flexio_i2c_status_t FLEXIO_I2C_DRV_MasterReceiveData(flexio_i2c_state_t *...
**         FLEXIO_I2C_DRV_MasterGetReceiveStatus    - flexio_i2c_status_t FLEXIO_I2C_DRV_MasterGetReceiveStatus(flexio_i2c_state_t...
**         FLEXIO_I2C_DRV_MasterAbortReceivingData  - flexio_i2c_status_t FLEXIO_I2C_DRV_Mast...
**         FLEXIO_I2C_DRV_TX_IRQHandler             - void FLEXIO_I2C_DRV_TX_IRQHandler(void * param);
**         FLEXIO_I2C_DRV_RX_IRQHandler             - void FLEXIO_I2C_DRV_RX_IRQHandler(void * param);
**         FLEXIO_I2S_DRV_Init                      - flexio_i2s_status_t FLEXIO_I2S_DRV_Init(uint32_t...
**         FLEXIO_I2S_DRV_Deinit                    - flexio_i2s_status_t FLEXIO_I2S_DRV_Deinit(flexio_i2s_handler_t * handler);
**         FLEXIO_I2S_DRV_TxStart                   - flexio_i2s_status_t FLEXIO_I2S_DRV_TxStart(flexio_i2s_handler_t * handler);
**         FLEXIO_I2S_DRV_RxStart                   - flexio_i2s_status_t FLEXIO_I2S_DRV_RxStart(flexio_i2s_handler_t * handler);
**         FLEXIO_I2S_DRV_TxStop                    - flexio_i2s_status_t FLEXIO_I2S_DRV_TxStop(flexio_i2s_handler_t * handler);
**         FLEXIO_I2S_DRV_RxStop                    - flexio_i2s_status_t FLEXIO_I2S_DRV_RxStop(flexio_i2s_handler_t * handler);
**         FLEXIO_I2S_DRV_SendDataInt               - flexio_i2s_status_t FLEXIO_I2S_DRV_SendDataInt(flexio_i2s_handler_t *...
**         FLEXIO_I2S_DRV_ReceiveDataInt            - flexio_i2s_status_t FLEXIO_I2S_DRV_ReceiveDataInt(flexio_i2s_handler_t *...
**         FLEXIO_I2S_DRV_SendDataDma               - flexio_i2s_status_t FLEXIO_I2S_DRV_SendDataDma(flexio_i2s_handler_t *...
**         FLEXIO_I2S_DRV_ReceiveDataDma            - flexio_i2s_status_t FLEXIO_I2S_DRV_ReceiveDataDma(flexio_i2s_handler_t *...
**         FLEXIO_I2S_DRV_TxInstallCallback         - void FLEXIO_I2S_DRV_TxInstallCallback(flexio_i2s_handler_t *...
**         FLEXIO_I2S_DRV_RxInstallCallback         - void FLEXIO_I2S_DRV_RxInstallCallback(flexio_i2s_handler_t *...
**
**     Copyright : 1997 - 2015 Freescale Semiconductor, Inc. 
**     All Rights Reserved.
**     
**     Redistribution and use in source and binary forms, with or without modification,
**     are permitted provided that the following conditions are met:
**     
**     o Redistributions of source code must retain the above copyright notice, this list
**       of conditions and the following disclaimer.
**     
**     o Redistributions in binary form must reproduce the above copyright notice, this
**       list of conditions and the following disclaimer in the documentation and/or
**       other materials provided with the distribution.
**     
**     o Neither the name of Freescale Semiconductor, Inc. nor the names of its
**       contributors may be used to endorse or promote products derived from this
**       software without specific prior written permission.
**     
**     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
**     ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
**     WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
**     DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
**     ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
**     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
**     LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
**     ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
**     (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
**     SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
**     
**     http: www.freescale.com
**     mail: support@freescale.com
** ###################################################################*/
/*!
** @file flexibleIO1.h
** @version 01.00
*/         
/*!
**  @addtogroup flexibleIO1_module flexibleIO1 module documentation
**  @{
*/         
#ifndef __flexibleIO1_H
#define __flexibleIO1_H
/* MODULE flexibleIO1. */

/* Include inherited beans */
#include "clockMan1.h"
#include "dmaController1.h"
#include "Cpu.h"
/*! @brief Device instance number */
#define flexibleIO1_IDX FLEXIO0_IDX
/*! @brief Device instance number for backward compatibility */
#define FSL_FLEXIBLEIO1 flexibleIO1_IDX

/*! @brief UART configuration declaration */
extern const flexio_uart_userconfig_t flexibleIO1_uartConfig0;
extern const flexio_uart_userconfig_t flexibleIO1_uartConfig1;
extern const flexio_uart_userconfig_t flexibleIO1_uartConfig2;
extern const flexio_uart_userconfig_t flexibleIO1_uartConfig3;
extern const flexio_uart_userconfig_t flexibleIO1_uartConfig4;
extern const flexio_uart_userconfig_t flexibleIO1_uartConfig5;
extern const flexio_uart_userconfig_t flexibleIO1_uartConfig6;
extern const flexio_uart_userconfig_t flexibleIO1_uartConfig7;
    
/*! @brief Common configuration declaration */
extern const flexio_user_config_t flexibleIO1_initConfig0;
    

#endif
/* ifndef __flexibleIO1_H */
/*!
** @}
*/
/*
** ###################################################################
**
**     This file was created by Processor Expert 10.5 [05.21]
**     for the Freescale Kinetis series of microcontrollers.
**
** ###################################################################
*/
