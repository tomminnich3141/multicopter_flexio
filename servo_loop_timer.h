/* ###################################################################
**     This component module is generated by Processor Expert. Do not modify it.
**     Filename    : servo_loop_timer.h
**     Project     : flexio_qc01
**     Processor   : MK82FN256VLL15
**     Component   : fsl_pit
**     Version     : Component 1.3.0, Driver 01.00, CPU db: 3.00.000
**     Repository  : KSDK 1.3.0 MK82FN256xxx15
**     Compiler    : GNU C Compiler
**     Date/Time   : 2016-04-20, 19:37, # CodeGen: 36
**     Contents    :
**         PIT_DRV_Init                  - pit_status_t PIT_DRV_Init(uint32_t instance,bool isRunInDebug);
**         PIT_DRV_Deinit                - pit_status_t PIT_DRV_Deinit(uint32_t instance);
**         PIT_DRV_InitChannel           - void PIT_DRV_InitChannel(uint32_t instance,uint32_t channel,const...
**         PIT_DRV_StartTimer            - void PIT_DRV_StartTimer(uint32_t instance,uint32_t channel);
**         PIT_DRV_StopTimer             - void PIT_DRV_StopTimer(uint32_t instance,uint32_t channel);
**         PIT_DRV_SetTimerPeriodByUs    - void PIT_DRV_SetTimerPeriodByUs(uint32_t instance,uint32_t channel,uint32_t us);
**         PIT_DRV_GetTimerPeriodByUs    - uint32_t PIT_DRV_GetTimerPeriodByUs(uint32_t instance,uint32_t channel);
**         PIT_DRV_ReadTimerUs           - uint32_t PIT_DRV_ReadTimerUs(uint32_t instance,uint32_t channel);
**         PIT_DRV_SetTimerPeriodByCount - void PIT_DRV_SetTimerPeriodByCount(uint32_t instance,uint32_t...
**         PIT_DRV_GetTimerPeriodByCount - uint32_t PIT_DRV_GetTimerPeriodByCount(uint32_t instance,uint32_t channel);
**         PIT_DRV_ReadTimerCount        - uint32_t PIT_DRV_ReadTimerCount(uint32_t instance,uint32_t channel);
**         PIT_DRV_InitUs                - void PIT_DRV_InitUs(uint32_t instance,uint32_t channel);
**         PIT_DRV_GetUs                 - uint32_t PIT_DRV_GetUs(void);
**         PIT_DRV_DelayUs               - void PIT_DRV_DelayUs(uint32_t us);
**         PIT_DRV_ClearIntFlag          - void PIT_DRV_ClearIntFlag(uint32_t instance,uint32_t channel);
**         PIT_DRV_IsIntPending          - bool PIT_DRV_IsIntPending(uint32_t instance,uint32_t channel);
**
**     Copyright : 1997 - 2015 Freescale Semiconductor, Inc. 
**     All Rights Reserved.
**     
**     Redistribution and use in source and binary forms, with or without modification,
**     are permitted provided that the following conditions are met:
**     
**     o Redistributions of source code must retain the above copyright notice, this list
**       of conditions and the following disclaimer.
**     
**     o Redistributions in binary form must reproduce the above copyright notice, this
**       list of conditions and the following disclaimer in the documentation and/or
**       other materials provided with the distribution.
**     
**     o Neither the name of Freescale Semiconductor, Inc. nor the names of its
**       contributors may be used to endorse or promote products derived from this
**       software without specific prior written permission.
**     
**     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
**     ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
**     WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
**     DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
**     ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
**     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
**     LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
**     ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
**     (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
**     SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
**     
**     http: www.freescale.com
**     mail: support@freescale.com
** ###################################################################*/
/*!
** @file servo_loop_timer.h
** @version 01.00
*/         
/*!
**  @addtogroup servo_loop_timer_module servo_loop_timer module documentation
**  @{
*/         
#ifndef __servo_loop_timer_H
#define __servo_loop_timer_H
/* MODULE servo_loop_timer. */

/* Include inherited beans */
#include "clockMan1.h"
#include "Cpu.h"

/*! @brief Device instance number */
#define servo_loop_timer_IDX PIT0_IDX
/*! @brief Device instance number for backward compatibility */
#define FSL_SERVO_LOOP_TIMER servo_loop_timer_IDX
/*! @brief PIT timer channel */
#define servo_loop_timer_CHANNEL 1
/*! @brief PIT timer channel for backward compatibility */
#define FSL_SERVO_LOOP_TIMER_CHANNEL servo_loop_timer_CHANNEL

/*! @brief PIT configuration declaration */
extern const pit_user_config_t servo_loop_timer_InitConfig0;
    

#endif
/* ifndef __servo_loop_timer_H */
/*!
** @}
*/
/*
** ###################################################################
**
**     This file was created by Processor Expert 10.5 [05.21]
**     for the Freescale Kinetis series of microcontrollers.
**
** ###################################################################
*/
